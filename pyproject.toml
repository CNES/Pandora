[build-system]
requires = [
    "setuptools>=65.5",
    "wheel",
    "setuptools_scm[toml]>=6.2",
    "meson-python",
    "meson >= 1.1.0",
    "pybind11"
]
build-backend = "mesonpy"

[tool.meson-python.args]
setup = ["-Dbuild_cpp_tests=disabled"]
compile = ['-j0']

# enable setuptools_scm version
[tool.setuptools_scm]

[project]
name = "pandora"
dynamic = ["version"]
authors = [{ name = "CNES" }]
description = "Pandora is a stereo matching framework that helps emulate state of the art algorithms"
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "numpy",
    "xarray>=0.13.0",
    "scipy",
    "rasterio",
    "json-checker",
    "transitions",
    "scikit-image>=0.19.0",
    "importlib-metadata;python_version<'3.10'"
]

[project.optional-dependencies]
dev = [
    "pandora[test]",
    "pandora[docs]",
    "pylint",
    "pre-commit",
    "mypy",
    "black",
    "types-setuptools",
    "build",
    "cibuildwheel==2.22.0"
]

test = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
]

sgm = [
    "pandora_plugin_libsgm==1.5.4"
]

mccnn = [
    "pandora_plugin_mccnn>=1.3.2"
]

docs = [
    "sphinx",
    "sphinx_rtd_theme",
    "sphinx_autoapi",
    "sphinx_tabs"
]

notebook = [
    "jupyter-dash",
    "plotly",
    "bokeh>=3",
    "matplotlib",
    "graphviz",
    "notebook",
    "ipykernel"
]

[tool.black]
# https://github.com/psf/black
line-length = 120
exclude = "(.eggs|.git|.mypy_cache|.nox|.tox|_build|build|dist|venv)"

[project.scripts]
pandora = "pandora.Pandora:main"

[tool.cibuildwheel]
archs = "auto64"
skip = ["pp*", "cp36-*", "cp37-*", "cp38-*", "*-musllinux*"]
config-settings = {"setup-args" = "-Dbuild_cpp_tests=disabled"}
test-extras = ["test", "sgm"]
test-command = "pytest {project}/tests/functional_tests/test_basic.py"

[tool.cibuildwheel.windows]
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair -w {dest_dir} {wheel}"
